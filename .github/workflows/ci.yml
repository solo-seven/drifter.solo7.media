name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '24.x'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run tests with coverage
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false
    
    - name: Check test coverage
      working-directory: ./frontend
      run: |
        COVERAGE=$(grep -oP 'All files[^|]*\|\s*\K[^|]*(?=\s*\|)' coverage/coverage-summary.json | grep -oP '\d+' | head -1)
        if [ "$COVERAGE" -lt 80 ]; then
          echo "Coverage is below 80%"
          exit 1
        fi

  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download Go modules
      working-directory: ./backend
      run: go mod download
      
    - name: Run backend tests and check coverage
      run: make test-backend
